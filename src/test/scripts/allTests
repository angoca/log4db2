# Copyright (c) 2012 - 2014, Andres Gomez Casanova (AngocA)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

# Execute all tests.
#
# Version: 2014-04-21 1-RC
# Author: Andres Gomez Casanova (AngocA)
# Made in COLOMBIA.

export RET=0

# Execute a given test.
executeTest() {
 SCHEMA=${1}
 PAUSE=${2}
 echo "====>Next: ${SCHEMA}"
 if [ "${PAUSE}" = "true" ] ; then
  read -p "Press enter to continue"
  . ${LOG4DB2_SRC_TEST_SCRIPT_PATH}/test ${SCHEMA} i x
 else
  . ${LOG4DB2_SRC_TEST_SCRIPT_PATH}/test ${SCHEMA} x
  export RET=$(tail -1 /tmp/db2unit.output | awk '/Return Status/ {print $4}')
 fi
}

. ./init-dev

db2 connect > /dev/null
if [ ${?} -ne 0 ] ; then
 echo "Please connect to a database before the execution of the tests."
 echo "Remember that to call the script the command is '. ./allTests'"
else
 if [ "${1}" = "-np" ] ; then
  PAUSE=false
  TIME_INI=$(date +"%T")
  MILLIS_INI=$(date +"%s")
 else
  PAUSE=true
 fi
 if [ "${PAUSE}" = "true" ] ; then
  echo "Executing all tests with pauses in between."
 else
  echo "Executing all tests."
 fi

 export RET=0
 executeTest LOG4DB2_APPENDERS ${PAUSE}
 SUM=${RET}
 export RET=0
 executeTest LOG4DB2_APPENDERS_IMPLEMENTATION ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 executeTest LOG4DB2_CACHE_CONFIGURATION ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 executeTest LOG4DB2_CACHE_LEVELS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 executeTest LOG4DB2_CACHE_LOGGERS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CASCADE_CALL_LIMIT ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONF_APPENDERS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONFIGURATION ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONF_LOGGERS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONF_LOGGERS_DELETE ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONF_LOGGERS_EFFECTIVE ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_CONF_LOGGERS_EFFECTIVE_CASES ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_DYNAMIC_APPENDERS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_FUNCTION_GET_DEFINED_PARENT_LOGGER ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_GET_LOGGER ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_GET_LOGGER_NAME ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_HIERARCHY ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_LAYOUT ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_LEVELS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_LOGS ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_MESSAGES ${PAUSE}
 SUM=$((${SUM}+${RET}))
 export RET=0
 #executeTest LOG4DB2_REFERENCES ${PAUSE}
 SUM=$((${SUM}+${RET}))

 if [ "${PAUSE}" != "true" ] ; then
  MILLIS_END=$(date +"%s")
  TIME_END=$(date +"%T")
  echo "Difference:"
  echo "${TIME_INI} start"
  echo "${TIME_END} end"
  echo "$((${MILLIS_END}-${MILLIS_INI})) seconds"
 fi
fi

return ${SUM}

