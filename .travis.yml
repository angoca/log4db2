env:
  - ENV=release
  - ENV=test TESTS=script
  - ENV=test TESTS=manual

before_install:
  # Install the required libraries
  - sudo apt-get update -qq
  - sudo apt-get -y install libaio1 ksh libstdc++6-4.4-pic libstdc++6-4.4-dev libstdc++5 rpm
  - sudo apt-get -y install libpam0g:i386
  - sudo ln -s /lib/i386-linux-gnu/libpam.so.0 /lib/libpam.so.0
  - sudo apt-get install numactl
  # Retrieves and extracts the DB2 binaries
  - cd /tmp
  - wget https://delivery04.dhe.ibm.com/sdfdl/v2/sar/CM/IM/04jdl/0/Xa.2/Xb.jusyLTSp44S03ZzHXWiLS32b1e23wbv6kF1tCDJAPkRERERERnijyifuPVo/Xc.CM/IM/04jdl/0/v10.5fp3a_linuxx64_server.tar.gz/Xd./Xf.LPR.D1vk/Xg.7681598/Xi.habanero/XY.habanero/XZ.JbRvkLE8TTv7J_Y3RP3k7E4qO_g/v10.5fp3a_linuxx64_server.tar.gz ; tar zxf v10.5fp3a_linuxx64_server.tar.gz ; cd server
  # Checks the prerequisites
  - ./db2prereqcheck -i
  # Install DB2 and creates an instance (Response file)
  - sudo ./db2setup -r /home/travis/build/angoca/log4db2/travis/db2.rsp || cat /tmp/db2setup.log
  # Changes the security
  - id
  - sudo usermod -a -G db2iadm1 $USER
  - id
  - sudo su - db2inst1 -c "db2 update dbm cfg using SYSADM_GROUP db2iadm1 ; db2stop ; db2start"
  # Creates the database
  - sudo su - db2inst1 -c "db2 create db log4db2 ; db2 connect to log4db2 ; db2 grant dbadm on database to user $USER ; db2 \"CREATE TABLESPACE SYSTOOLSPACE IN IBMCATGROUP MANAGED BY AUTOMATIC STORAGE USING STOGROUP IBMSTOGROUP EXTENTSIZE 4\""
  # Retrieves and extract db2unit
  - cd
  - wget https://github.com/angoca/db2unit/releases/download/db2unit-1-Beta/db2unit.tar.gz
  - tar zxvf db2unit.tar.gz

install:
  # Install log4db2
  - cd ${TRAVIS_BUILD_DIR}
  - sh -c "if [ '$ENV' = 'release' ]; then mvn ; fi"
  - sh -c "if [ '$ENV' = 'release' ]; then . ~db2inst1/sqllib/db2profile ; db2 connect to log4db2 ; cd target/log4db2/log4db2 ; . ./install ; fi"
  - bash -c "if [ '$ENV' = 'test' ]; then . ~db2inst1/sqllib/db2profile ; db2 connect to log4db2 ; cd src/test/scripts ; . ./init-dev ; cd ../../main/scripts ; . ./install ; fi"
  # Install db2unit
  - bash -c "if [ '$ENV' = 'test' ]; then . ~db2inst1/sqllib/db2profile ; db2 connect to log4db2 ; cd ; cd db2unit ; . ./install ; fi"
  - cd src/test/scripts ; . ./init-dev

script:
  - bash -c "if [ '$TESTS' = 'script' ]; then db2 connect to log4db2 ; . ./test ; fi" x TEST_DB2UNIT_EMPTY i
  - bash -c "if [ '$TESTS' = 'script' ]; then db2 connect to log4db2 ; . ./test ; fi" x TEST_DB2UNIT_EXECUTION i
  - bash -c "if [ '$TESTS' = 'script' ]; then db2 connect to log4db2 ; . ./test ; fi" x TEST_DB2UNIT_ASSERTIONS i
  - bash -c "if [ '$TESTS' = 'script' ]; then db2 connect to log4db2 ; . ./allTests ; fi" x "-np"
  - cd ../sql-pl
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -tf Tests_TEST_DB2UNIT_EMPTY.sql ; fi"
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -tf Tests_TEST_DB2UNIT_EXECUTION.sql ; fi"
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -tf Tests_TEST_DB2UNIT_ASSERTIONS.sql ; fi"
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -r /tmp/db2unit.output \"CALL DB2UNIT.RUN_SUITE('TEST_DB2UNIT_EMPTY')\" ; ../../../travis/procSP ; fi"
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -r /tmp/db2unit.output \"CALL DB2UNIT.RUN_SUITE('TEST_DB2UNIT_EXECUTION')\" ; ../../../travis/procSP ; fi"
  - sh -c "if [ '$TESTS' = 'manual' ]; then db2 connect to log4db2 ; db2 -r /tmp/db2unit.output \"CALL DB2UNIT.RUN_SUITE('TEST_DB2UNIT_ASSERTIONS')\" ; ../../../travis/procSP ; fi"

